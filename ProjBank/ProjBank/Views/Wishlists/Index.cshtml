@model IEnumerable<ProjBank.Models.Wishlist>

@{
    ViewBag.Title = "Wishlist";
}



<div class="container">
  


    <div class="row">
        <h2>
            Wishlist Details
        </h2>
        <hr class="colorgraph"/>
        <div class="col-md-9">
            <div class="well well-sm">
                <h4>Search</h4>
                @using (Html.BeginForm("Search", "WishLists", FormMethod.Post, new { Class = "form-inline" }))
            {

                    <div class="form-group">
                        <label for="exampleInputName2">Description</label>
                        <input type="text" name="wishlistDesc" class="form-control" id="wishlistDesc" placeholder="Description">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail2">Price</label>
                        <input type="text" name="wishlistPrice" class="form-control" id="wishlistPrice" placeholder="$">
                    </div>
                    <button type="submit" class="btn btn-primary btn-small"><i class="fa fa-search"></i></button>

                }
            </div>
           

        </div>
        
    
        <div class="col-md-3">
            <a class="btn btn-primary" href="/WishLists/Create/">Create New Wishlist</a>
           
        </div>
    </div>
    

    


    <div class="row">

        <table class="table table-condensed table-bordered">
            <tr>
                <!-- <th>
                @Html.DisplayNameFor(model => model.Account.Recipient)
            </th> -->
                <th>
                    @Html.DisplayNameFor(model => model.DateAdded)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Link)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Purchased)
                </th>
                <th>
                    Affordability
                </th>
                <th>If Purchased</th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {


                var isAffordable = "";
                if (item.Account.getTotalAmount < item.Cost)
                {
                    isAffordable = "danger";
                }


                <tr class="@isAffordable">

                    <!--<td>
                    @Html.DisplayFor(modelItem => item.AccountId)
                </td> -->
                    <td>
                        @Html.DisplayFor(modelItem => item.DateAdded)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        <a href="@item.Link" target="_blank">@item.Link </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Purchased)
                    </td>

                    @if (item.Account.getTotalAmount > item.Cost)
                    {
                        <td>
                            <div class="progress progress-striped active">
                                <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
                                    100%
                                </div>
                            </div>
                        </td>
                        <td>
                            @{
                                var totalAmt = item.Account.getTotalAmount + item.Account.interestAccrued;
                                var remaining = totalAmt - item.Cost;
                            }
                           (  @remaining )
                        </td>
                    }
                    else
                    {
                        <td>

                            @{
                                var diff = item.Cost - item.Account.getTotalAmount;
                                decimal per = Decimal.Round((1 - (diff / item.Cost)) * 100);
                            }
                           
                            <div class="progress progress-striped active">
                                <div class="progress-bar" role="progressbar" aria-valuenow="@per" aria-valuemin="0" aria-valuemax="100" style="width: @per%; min-width:2em">
                                    @per%
                                </div>
                            </div>

                        </td>
                        <td> Need $@diff  more</td>
                                }

                    <td>
                        @{
                            if (item.Account.IsOwner(User.Identity.Name))
                            {
                                @Html.ActionLink("Edit", "Edit", new { Controller = "WishLists", id = item.Id }) @Html.Raw("|")
                                @Html.ActionLink("Delete", "Delete", new { Controller = "WishLists", id = item.Id }) @Html.Raw("|")
                            }
                            @Html.ActionLink("Details", "Details", new { Controller = "WishLists", id = item.Id })
                        }
                    </td>
                </tr>
                            }

        </table>












       


    </div>
</div>